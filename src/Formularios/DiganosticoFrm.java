package Formularios;

import DbContext.DiagnosticosCtx;
import DbContext.VehiculoCtx;
import java.sql.Date;
import Entidades.Diagnosticos;
import Entidades.Empleados;
import Entidades.Vehiculos;
import Fuentes.Tipografia;
import Utilidades.Cronometro;
import com.formdev.flatlaf.FlatLightLaf;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.util.UUID;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import java.sql.Time;


public class DiganosticoFrm extends javax.swing.JFrame {

   
    
    private Empleados USUARIO = null;
    
    
    VehiculoCtx vehiculoCtx = new VehiculoCtx();
    DiagnosticosCtx diagnosticosCtx = new DiagnosticosCtx();
    
    Cronometro _timer;
    
    public DiganosticoFrm(Empleados employee) {
        initComponents();
        _timer = new Cronometro();
        
        _timer.iniciarCronometro();
        
        this.USUARIO = employee;
        
        Tipografia fuente = new Tipografia("Fuente.ttf", 14f);
        fuente.asignarFuente(this);
        
        iniciarActualizadorDeEtiqueta();
        
    }
    
    private void iniciarActualizadorDeEtiqueta() {
        Timer labelUpdater = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                lb_timer.setText(_timer.tiempo()); 
            }
        });

        labelUpdater.start();
    }
    
    public void setsCheckBox() {
        cb_legal.setSelected(false);
        cb_fallas.setSelected(false);
        cb_mecanica.setSelected(false);
        cb_visual.setSelected(false);
    }
    
    private void validarCampos(String registration, String remarks) throws Exception {
        if (registration.isEmpty() || remarks.isEmpty()) {
            throw new Exception("Rellena todos los campos.");
        }
    }

    private String determinarResultadoDiagnostico() {
        return (cb_legal.isSelected() && cb_fallas.isSelected() && cb_visual.isSelected() && cb_mecanica.isSelected()) 
                ? "APROBADO" : "NO APROBADO";
    }

    private Diagnosticos crearDiagnostico(Vehiculos vehicle, String remarks, String result) {
        Diagnosticos diagnostic = new Diagnosticos();
        LocalDate date = LocalDate.now();

        diagnostic.setId(UUID.randomUUID().toString());
        diagnostic.setFecha(Date.valueOf(date));
        diagnostic.setResultado(result);
        diagnostic.setObservaciones(remarks);
        diagnostic.setDuracion(Time.valueOf(_timer.tiempo()));
        diagnostic.setFkEmpleadoId(USUARIO);
        diagnostic.setFkVehiculoId(vehicle);

        return diagnostic;
    }

    private void limpiarCampos() {
        txt_matricula.setText("");
        ta_obervaciones.setText("");
    }

    private void mostrarMensaje(String mensaje) {
        JOptionPane.showMessageDialog(rootPane, mensaje, "Éxito", JOptionPane.INFORMATION_MESSAGE);
    }

    private void mostrarMensajeError(Exception e) {
        JOptionPane.showMessageDialog(rootPane, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        txt_matricula = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_obervaciones = new javax.swing.JTextArea();
        btn_guardar = new javax.swing.JButton();
        lb_timer = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cb_legal = new javax.swing.JCheckBox();
        cb_visual = new javax.swing.JCheckBox();
        cb_mecanica = new javax.swing.JCheckBox();
        cb_fallas = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mn_reiniciar = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Geist Mono Light", 0, 12)); // NOI18N
        jLabel1.setText("Completar Diagnostico");

        jLabel2.setFont(new java.awt.Font("Geist Mono Light", 0, 12)); // NOI18N
        jLabel2.setText("Matricula:");

        txt_matricula.setFont(new java.awt.Font("Geist Mono Light", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Geist Mono Light", 0, 12)); // NOI18N
        jLabel4.setText("Observaciones:");

        ta_obervaciones.setColumns(20);
        ta_obervaciones.setFont(new java.awt.Font("Geist Mono Light", 0, 12)); // NOI18N
        ta_obervaciones.setRows(5);
        jScrollPane1.setViewportView(ta_obervaciones);

        btn_guardar.setFont(new java.awt.Font("Geist Mono Light", 0, 12)); // NOI18N
        btn_guardar.setText("Guardar");
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });

        lb_timer.setFont(new java.awt.Font("Geist Mono Light", 0, 12)); // NOI18N
        lb_timer.setText("00:00:00");

        jLabel5.setFont(new java.awt.Font("Geist Mono Light", 0, 12)); // NOI18N
        jLabel5.setText("Si aun no ha comensado el diagnostico de click -");

        jLabel6.setFont(new java.awt.Font("Geist Mono Light", 0, 12)); // NOI18N
        jLabel6.setText("en \"Reiniciar\" cuando este por comenzar.");

        jLabel7.setFont(new java.awt.Font("Geist Mono Light", 0, 12)); // NOI18N
        jLabel7.setText("Al finalizar, el contador comensara en cero.");

        cb_legal.setFont(new java.awt.Font("Geist Mono Light", 0, 12)); // NOI18N
        cb_legal.setText("Información Legal");

        cb_visual.setFont(new java.awt.Font("Geist Mono Light", 0, 12)); // NOI18N
        cb_visual.setText("Visual");

        cb_mecanica.setFont(new java.awt.Font("Geist Mono Light", 0, 12)); // NOI18N
        cb_mecanica.setText("Mecanica");

        cb_fallas.setFont(new java.awt.Font("Geist Mono Light", 0, 12)); // NOI18N
        cb_fallas.setText("Fallas Graves O Potenciales");

        jLabel8.setFont(new java.awt.Font("Geist Mono Light", 0, 12)); // NOI18N
        jLabel8.setText("Marque la casilla si paso la revision:");

        jMenuBar1.setFont(new java.awt.Font("Geist Mono Light", 0, 12)); // NOI18N

        mn_reiniciar.setText("Reiniciar");
        mn_reiniciar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                mn_reiniciarMousePressed(evt);
            }
        });
        jMenuBar1.add(mn_reiniciar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(0, 375, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_matricula)
                            .addComponent(btn_guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lb_timer)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cb_legal)
                                            .addComponent(cb_fallas))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cb_mecanica)
                                            .addComponent(cb_visual)))
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel4))
                                .addGap(0, 162, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_matricula, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_legal)
                    .addComponent(cb_visual))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cb_mecanica)
                    .addComponent(cb_fallas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lb_timer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addComponent(btn_guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
        try {
            String matricula = txt_matricula.getText().toUpperCase();
            String observaciones = ta_obervaciones.getText();

            validarCampos(matricula, observaciones);

            String matriculaSinEspacios = matricula.replaceAll("\\s+", "").toUpperCase();

            Vehiculos vehicle = vehiculoCtx.obtenerPorMatricula(matriculaSinEspacios);
            if (vehicle == null) {
                throw new Exception("El vehículo no existe.");
            }

            String resultado = determinarResultadoDiagnostico();

            Diagnosticos diagnostico = crearDiagnostico(vehicle, observaciones, resultado);

            diagnosticosCtx.crear(diagnostico);

            limpiarCampos();

            _timer.reiniciarCronometro();

            setsCheckBox();

            mostrarMensaje("Diagnóstico creado correctamente.");

        } catch (Exception e) {
            mostrarMensajeError(e);
        }
    }//GEN-LAST:event_btn_guardarActionPerformed

    private void mn_reiniciarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mn_reiniciarMousePressed
        _timer.reiniciarCronometro();
    }//GEN-LAST:event_mn_reiniciarMousePressed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        try{
            SessionFrm frmLogin = new SessionFrm();
            frmLogin.setVisible(true);
            frmLogin.setLocationRelativeTo(null);
            this.dispose();
        }catch(Exception e){
            mostrarMensajeError(e);
        }
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(new FlatLightLaf()); 
        } catch (UnsupportedLookAndFeelException e) {
            e.printStackTrace();
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DiganosticoFrm form = new DiganosticoFrm(null);
                form.setVisible(true);
                form.setResizable(false);
                form.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_guardar;
    private javax.swing.JCheckBox cb_fallas;
    private javax.swing.JCheckBox cb_legal;
    private javax.swing.JCheckBox cb_mecanica;
    private javax.swing.JCheckBox cb_visual;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lb_timer;
    private javax.swing.JMenu mn_reiniciar;
    private javax.swing.JTextArea ta_obervaciones;
    private javax.swing.JTextField txt_matricula;
    // End of variables declaration//GEN-END:variables
}
